import org.gradle.internal.os.OperatingSystem

plugins {
    //Applies application plugin also
    id 'org.beryx.runtime' version '1.8.5'
    id 'net.thauvin.erik.gradle.semver' version '1.0.4' 
}

apply plugin: 'java'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
   javaMainClass = "packit.HelloWorld"
}

application {
    mainClassName = javaMainClass
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {

}

jar {
    manifest {
        attributes(
            "Main-Class": javaMainClass
        )
    }
}

runtime {
    jpackage {
        outputDir = "distribution"

        if (OperatingSystem.current().isLinux()) {
            installerOptions = [ 
                '--verbose',
                '--vendor', 'Test Vendor',
                '--app-version', "${semver.semver}",
                '--linux-menu-group', 'Games;',
                '--description', 'Test Description',
                '--linux-shortcut'
            ]
        } else if (OperatingSystem.current().isMacOsX()) {
            installerOptions = [
                '--verbose',
                '--vendor', 'Test Vendor',
                '--app-version', "${semver.semver}"
            ]
        } else if (OperatingSystem.current().isUnix()) {
            println "*** Unix ***"
        } else if (OperatingSystem.current().isWindows()) {
            installerType = "msi"

            installerOptions = [
                '--vendor', 'Test Vendor',
                '--app-version', "${semver.semver}",
                '--verbose',
                '--win-dir-chooser',
                '--win-shortcut',
                '--win-menu',
            ]
        }  else {
            println "*** Unknown ***"
        }
    }
}

task displayDist(type:Exec) {
    if (OperatingSystem.current().isWindows()) {
        commandLine 'cmd', 'dir', '/A', '.\\build\\distribution'
    }
}
task (version).doLast {
    println "Version: $version"
}